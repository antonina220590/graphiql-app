{
    "language": {
      "ru": "Русский",
      "en": "Английский",
      "be": "Беларуская"
    },
    "header": {
        "signIn": "Вход",
        "signUp": "Регистрация",
        "signOut": "Выход"
      },
      "history": {
        "requests": "Ваши запросы",
        "noRequests": "Вы еще не выполнили ни одного запроса",
        "empty": "Здесь пусто. Попробуйте следующие варианты:",
        "rest": "REST-клиент",
        "grapiQL": "GraphiQL-клиент",
        "history": "История"
      },
      "restfull": {
        "restClient": "REST клиент",
        "send": "Отправить",
        "body": "Тело:",
        "key": "Ключ",
        "value": "Значение",
        "variables": "Переменные",
        "headers": "Заголовки",
        "response": "Ответ:",
        "status": "Статус:",
        "variableKeyPlaceholder": "Ключ переменной",
        "variableValuePlaceholder": "Значение переменной",
        "addVariables": "Добавить переменные",
        "addHeader": "Добавить заголовок",
        "message": {
          "empty": "Поле URL пустое. Пожалуйста, введите URL.",
          "unknown": "Произошла неизвестная ошибка"
        },
        "error": {
          "unknownStatus": "Неизвестный статус",
          "errorMessage": "Ошибка: {{message}}",
          "responseMessage": "{{status}} {{statusMessage}}"
        },
        "statusText": {
          "200": "ОК",
          "201": "Создано",
          "204": "Без содержимого",
          "400": "Некорректный запрос",
          "401": "Неавторизован",
          "403": "Запрещено",
          "404": "Не найдено",
          "500": "Внутренняя ошибка сервера",
          "502": "Плохой шлюз",
          "503": "Сервис недоступен"
        }
       },   
       "graphql": {
    "client": "GraphiQL Клиент",
    "endpointUrl": "URL Эндпоинта",
    "format": "Нет запроса для форматирования!",
    "send": "Отправить",
    "close": "Закрыть",
    "status": "Статус:",
    "endpointUrlSdl": "SDL URL Эндпоинта",
    "formattingFail": "Ошибка форматирования, попробуйте снова!",
    "decodeFail": "Не удалось декодировать параметры URL",
    "correctUrl": "Пожалуйста, укажите корректный URL и запрос",
    "oops": "Упс! Что-то пошло не так!",
    "invalidFormat": "Неправильный формат переменных. Пожалуйста, проверьте ввод.",
    "fetchFail": "Не удалось получить данные",
    "writeHere": "# Напишите здесь ваш запрос или мутацию",
    "response": "Ответ",
    "schema": {
      "schemaHeader": "Схема GraphQL",
      "schema": "Схема",
      "httpError": "Ошибка HTTP! Статус: {{status}}",
      "graphqlError": "Ошибки, возвращённые GraphQL: {{result}}",
      "missing": "Недействительный introspection ответ: отсутствует __schema"
    },
    "header": {
      "headers": "Заголовки:",
      "key": "Ключ",
      "value": "Значение",
      "addHeader": "Добавить заголовок",
      "Headers": "Заголовки",
      "variables": "Переменные",
      "placeholder": "{\"key\": \"значение\"}"
    }
  },
    "home": {
        "welcomeMessage": "Мы рады приветствовать вас!",
        "description": "Это облегченная версия Postman и GraphiQL, объединенная в одном приложении.",
        "welcomeBack": "С возвращением,",
        "rest": "REST Клиент",
        "qraphiQL": "GraphiQL Клиент",
        "history": "История",
        "welcome": "Добро пожаловать!",
        "team": "Наша команда",
        "Kate": "Екатерина Кирьянова",
        "member": "Участник",
        "taskK": "RESTfull клиент, поддержка языков",
        "Antonina": "Антонина Тюрина",
        "lead": "Руководитель команды",
        "taskA": "GraphiQL, История, Главная страница",
        "Inna": "Инна",
        "taskI": "Вход, Регистрация, Firebase",
        "rsSchool": "RS School",
        "startDescription": "Этот проект был создан в качестве итогового проекта курса React в",
        "rsSchoolDescription": "бесплатном и основанном онлайн сообществом образовательном курсе, проводимом сообществом The Rolling Scopes с 2013 года. В настоящее время в образовательном процессе участвует более 500 разработчиков из разных стран и компаний в качестве наставников."
      }
  }